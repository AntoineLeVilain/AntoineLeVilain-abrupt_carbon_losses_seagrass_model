aes(x = ma, y = S_seagrass),
color = gradient_colors[2], size = 1, linetype = "solid") + xlab("ma") + ylab("S") + theme_classic() + theme(legend.position = "none")
plot_ma_S <- plot_ma_S + geom_line(data = `ma1e+06bare`,
aes(x = ma, y = S_bare),
color = gradient_colors[2], size = 1, linetype = "solid")
ggsave("plot_ma_S_nf.png",
plot_ma_S,
width = 5, height = 3)
# working directory
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/supp') # set your own working directory
# requirements
package_list <- c("ggplot2", "readxl", "dplyr", "scales")
for (package in package_list){
library(package, character.only = TRUE)
}
# model
model <- function(x){
S <- rmax*((tmax - temp)/(tmax - topt))*((temp/topt)^(topt/(tmax - topt)))*x[5]/(x[5] + nr)*(i0*exp(-a*pmax*z)/(i0*exp(-a*pmax*z) + ir))*x[1] - x[1]*(ms + ma + mh*hmax*sh/(sh + x[1]))
CA <- alpha*h*pmax*(1 - (hmax*sh/(sh + x[1]))/(hmax*sh/(sh + x[1]) + hp)) - x[2]*(phida*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + (hmax*sh/(sh + x[1]))/(hmax*sh/(sh + x[1]) + hea) + 1/(1+exp(-fb1*(x[2] + x[3] - fb2))))
CS <- beta*x[1]*(ms + ma + mh*hmax*sh/(sh + x[1])) - x[3]*(phids*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + (hmax*sh/(sh + x[1]))/(hmax*sh/(sh + x[1]) + hes) + 1/(1+exp(-fb1*(x[2] + x[3] - fb2))))
CB <- x[2]*1/(1+exp(-fb1*(x[2] + x[3] - fb2))) + x[3]*1/(1+exp(-fb1*(x[2] + x[3] - fb2))) - x[4]*phidb*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp))
N <- i + gamma*(x[2]*phida*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + x[3]*phids*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + x[4]*phidb*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp))) - delta*(rmax*((tmax - temp)/(tmax - topt))*((temp/topt)^(topt/(tmax - topt)))*x[5]/(x[5] + nr)*(i0*exp(-a*pmax*z))/(i0*exp(-a*pmax*z) + ir))*x[1]-l*x[5]
c(S = S, CA = CA, CS = CS, CB = CB, N = N)
}
# parameter values
rmax <- 0.011
ms <- 0.0014
topt <- 298.85
tmax <- 307.05
nr <- 0.015
i0 <- 709
ir <- 296
sh <- 22.7
hp <- 0.023
a <- 0.07
mh <- 0.028
alpha <- 0.194
h <- 0.68
phida <- 0.024
phids <- 0.00024
phidb <- 0.00005
ea <- 58000
r <- 8.314
td <- 303.65
hea <- 12.53
hes <- 12.53
fb1 <- 0.0022
fb2 <- 1335
beta <- 0.292
gamma <- 0.137
delta <- 0.052
l <- 0.01
z <- 20
temp <- 298.85
hmax <- 0.05
pmax <- 0.5
ma <- 0
i <- 0.02
data <- read.csv("ma_sh.csv")
# plot 1
for (j in unique(data$sh)){
for (par1 in c("ma", "pmax", "temp")){
assign(par1, read.csv(paste0(par1, "_sh.csv"), header = TRUE))
# Define your start and end colors
color_start = "#FF0000"  # Red
color_end = "#0000FF"    # Blue
# Create a color ramp function
color_func = colorRampPalette(c(color_start, color_end))
# Generate the gradient colors
gradient_colors = color_func(length(unique(get(par1)$sh)))
assign(paste0(par1, j, "seagrass"), get(par1) %>%
filter(sh == j) %>%
filter(stability == "seagrass" | stability == "bistable"))
assign(paste0(par1, j, "bistable"), get(par1) %>%
filter(sh == j) %>%
filter(stability == "bistable"))
assign(paste0(par1, j, "bare"), get(par1) %>%
filter(sh == j) %>%
filter(stability == "bare" | stability == "bistable"))
if (nrow(get(paste0(par1, j, "bistable"))) == 0){
# Add first row of bare df to seagrass df
bare_first_row <- slice(get(paste0(par1, j, "bare")), 1)
assign(paste0(par1, j, "seagrass"), get(paste0(par1, j, "seagrass")) %>% add_row(bare_first_row))
# Swap column values
df <- get(paste0(par1, j, "seagrass"))
df[nrow(df), paste0("S", "_seagrass")] <- df[nrow(df), paste0("S", "_bare")]
df[nrow(df), paste0("CA", "_seagrass")] <- df[nrow(df), paste0("CA", "_bare")]
df[nrow(df), paste0("CS", "_seagrass")] <- df[nrow(df), paste0("CS", "_bare")]
df[nrow(df), paste0("CB", "_seagrass")] <- df[nrow(df), paste0("CB", "_bare")]
df[nrow(df), paste0("N", "_seagrass")] <- df[nrow(df), paste0("N", "_bare")]
assign(paste0(par1, j, "seagrass"), df)
}
for (index in c("S", "CB", "CA_CS")){
if (index == "S"){
assign(paste0("plot_", par1, "_", index, "_", j), ggplot() +
geom_line(data = get(paste0(par1, j, "seagrass")),
aes(x = get(par1), y = get(paste0(index, "_seagrass"))),
color = gradient_colors[which(unique(get(par1)$sh) == j)], size = 1, linetype = "solid") +
xlab(par1) + ylab(index) + theme_classic() + theme(legend.position = "none"))
assign(paste0("plot_", par1, "_", index, "_", j), get(paste0("plot_", par1, "_", index, "_", j)) +
geom_line(data = get(paste0(par1, j, "bistable")), aes(x = get(par1), y = get(paste0(index, "_bistable"))),
color = gradient_colors[which(unique(get(par1)$sh) == j)], size = 1, linetype = "dashed"))
assign(paste0("plot_", par1, "_", index, "_", j), get(paste0("plot_", par1, "_", index, "_", j)) +
geom_line(data = get(paste0(par1, j, "bare")), aes(x = get(par1), y = get(paste0(index, "_bare"))),
color = gradient_colors[which(unique(get(par1)$sh) == j)], size = 1, linetype = "solid"))
} else if (index == "CB") {
assign(paste0("plot_", par1, "_C_", j), ggplot() +
geom_line(data = get(paste0(par1, j, "seagrass")),
aes(x = get(par1), y = get("CB_seagrass")),
color = gradient_colors[which(unique(get(par1)$sh) == j)], size = 1, linetype = "solid") +
xlab(par1) + ylab(index) + theme_classic() + theme(legend.position = "none"))
assign(paste0("plot_", par1, "_C_", j), get(paste0("plot_", par1, "_C_", j)) +
geom_line(data = get(paste0(par1, j, "bistable")), aes(x = get(par1), y = get("CB_bistable")),
color = gradient_colors[which(unique(get(par1)$sh) == j)], size = 1, linetype = "dashed"))
assign(paste0("plot_", par1, "_C_", j), get(paste0("plot_", par1, "_C_", j)) +
geom_line(data = get(paste0(par1, j, "bare")), aes(x = get(par1), y = get("CB_bare")),
color = gradient_colors[which(unique(get(par1)$sh) == j)], size = 1, linetype = "solid"))
} else {
assign(paste0("plot_", par1, "_CA_CS_", j), ggplot() +
geom_line(data = get(paste0(par1, j, "seagrass")),
aes(x = get(par1), y = get("CA_seagrass")),
color = "orange", size = 1, linetype = "solid") +
xlab(par1) + ylab(index) + theme_classic() + theme(legend.position = "none"))
assign(paste0("plot_", par1, "_CA_CS_", j), get(paste0("plot_", par1, "_CA_CS_", j)) +
geom_line(data = get(paste0(par1, j, "seagrass")),
aes(x = get(par1), y = get("CS_seagrass")),
color = "green", size = 1, linetype = "solid") +
xlab(par1) + ylab(index) + theme_classic() + theme(legend.position = "none"))
assign(paste0("plot_", par1, "_CA_CS_", j), get(paste0("plot_", par1, "_CA_CS_", j)) +
geom_line(data = get(paste0(par1, j, "bistable")), aes(x = get(par1), y = get("CA_bistable")),
color = "orange", size = 1, linetype = "dashed"))
assign(paste0("plot_", par1, "_CA_CS_", j), get(paste0("plot_", par1, "_CA_CS_", j)) +
geom_line(data = get(paste0(par1, j, "bistable")), aes(x = get(par1), y = get("CS_bistable")),
color = "green", size = 1, linetype = "dashed"))
assign(paste0("plot_", par1, "_CA_CS_", j), get(paste0("plot_", par1, "_CA_CS_", j)) +
geom_line(data = get(paste0(par1, j, "bare")), aes(x = get(par1), y = get("CA_bare")),
color = "orange", size = 1, linetype = "solid"))
assign(paste0("plot_", par1, "_CA_CS_", j), get(paste0("plot_", par1, "_CA_CS_", j)) +
geom_line(data = get(paste0(par1, j, "bare")), aes(x = get(par1), y = get("CS_bare")),
color = "green", size = 1, linetype = "solid"))
}
}
}
}
plot_ma_S <- ggplot() + geom_line(data = ma22.7seagrass,
aes(x = ma, y = S_seagrass),
color = gradient_colors[1], size = 1, linetype = "solid") + xlab("ma") + ylab("S") + theme_classic() + theme(legend.position = "none")
plot_ma_S <- plot_ma_S + geom_line(data = ma22.7bistable,
aes(x = ma, y = S_bistable),
color = gradient_colors[1], size = 1, linetype = "dashed")
plot_ma_S <- plot_ma_S + geom_line(data = ma22.7bare,
aes(x = ma, y = S_bare),
color = gradient_colors[1], size = 1, linetype = "solid")
ggsave("plot_ma_S_f.png",
plot_ma_S,
width = 5, height = 3)
plot_ma_S <- ggplot() + geom_line(data = `ma1e+06seagrass`,
aes(x = ma, y = S_seagrass),
color = gradient_colors[2], size = 1, linetype = "solid") + xlab("ma") + ylab("S") + theme_classic() + theme(legend.position = "none")
plot_ma_S <- plot_ma_S + geom_line(data = `ma1e+06bare`,
aes(x = ma, y = S_bare),
color = gradient_colors[2], size = 1, linetype = "solid")
ggsave("plot_ma_S_nf.png",
plot_ma_S,
width = 5, height = 3)
plot_pmax_S <- ggplot() + geom_line(data = pmax22.7seagrass,
aes(x = pmax, y = S_seagrass),
color = gradient_colors[1], size = 1, linetype = "solid") + xlab("pmax") + ylab("S") + theme_classic() + theme(legend.position = "none")
plot_pmax_S <- plot_pmax_S + geom_line(data = pmax22.7bistable,
aes(x = pmax, y = S_bistable),
color = gradient_colors[1], size = 1, linetype = "dashed")
plot_pmax_S <- plot_pmax_S + geom_line(data = pmax22.7bare,
aes(x = pmax, y = S_bare),
color = gradient_colors[1], size = 1, linetype = "solid")
ggsave("plot_pmax_S_f.png",
plot_pmax_S,
width = 5, height = 3)
plot_pmax_S <- ggplot() + geom_line(data = `pmax1e+06seagrass`,
aes(x = pmax, y = S_seagrass),
color = gradient_colors[2], size = 1, linetype = "solid") + xlab("pmax") + ylab("S") + theme_classic() + theme(legend.position = "none")
plot_pmax_S <- plot_pmax_S + geom_line(data = `pmax1e+06bare`,
aes(x = pmax, y = S_bare),
color = gradient_colors[2], size = 1, linetype = "solid")
ggsave("plot_pmax_S_nf.png",
plot_pmax_S,
width = 5, height = 3)
plot_temp_S <- ggplot() + geom_line(data = temp22.7seagrass,
aes(x = temp, y = S_seagrass),
color = gradient_colors[1], size = 1, linetype = "solid") + xlab("temp") + ylab("S") + theme_classic() + theme(legend.position = "none")
plot_temp_S <- plot_temp_S + geom_line(data = temp22.7bistable,
aes(x = temp, y = S_bistable),
color = gradient_colors[1], size = 1, linetype = "dashed")
plot_temp_S <- plot_temp_S + geom_line(data = temp22.7bare,
aes(x = temp, y = S_bare),
color = gradient_colors[1], size = 1, linetype = "solid")
ggsave("plot_temp_S_f.png",
plot_temp_S,
width = 5, height = 3)
plot_temp_S <- ggplot() + geom_line(data = `temp1e+06seagrass`,
aes(x = temp, y = S_seagrass),
color = gradient_colors[2], size = 1, linetype = "solid") + xlab("temp") + ylab("S") + theme_classic() + theme(legend.position = "none")
plot_temp_S <- plot_temp_S + geom_line(data = `temp1e+06bare`,
aes(x = temp, y = S_bare),
color = gradient_colors[2], size = 1, linetype = "solid")
ggsave("plot_temp_S_nf.png",
plot_temp_S,
width = 5, height = 3)
rm(list=ls())
# Requirements
package_list <- c("sensobol", "data.table", "ggplot2", "deSolve", "foreach", "parallel", "readxl", "doParallel", "rootSolve", "dplyr", "rlang", "pracma", "matrixcalc", "data.table", "nleqslv")
for (package in package_list){
if (!require(package, character.only = TRUE)) {
install.packages(package)
}
library(package, character.only = TRUE)
}
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/2_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_C.dummy.RData")
ind <- readRDS("ld_deter_ma_C.RData")
feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
feedback_dummy <- feedback_dummy[1, 1]
feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "feedback") %>%
select(original, low.ci, parameters)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/2_no_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_S.dummy.RData")
ind <- readRDS("ld_deter_ma_S.RData")
no_feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
no_feedback_dummy <- no_feedback_dummy[1, 1]
no_feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "no_feedback") %>%
select(original, low.ci, parameters)
rm(ind)
rm(ind.dummy)
feedback_sobol <- feedback_sobol %>%
filter(low.ci > feedback_dummy) %>%
mutate(original = original / sum(original)) %>%
select(original, parameters)
no_feedback_sobol <- no_feedback_sobol %>%
filter(low.ci > no_feedback_dummy) %>%
mutate(original = original / sum(original)) %>%
select(original, parameters)
# Define a color palette
color_palette <- c(
"rmax" = "#377eb8", "topt" = "#ff7f00", "tmax" = "#4daf4a",
"l" = "#f781bf", "nr" = "#a65628", "i0" = "#984ea3",
"ir" = "#999999", "hp" = "#e41a1c", "a" = "#dede00",
"mh" = "#f0027f", "alpha" = "#b3de69", "h" = "#fccde5",
"phida" = "#80b1d3", "phids" = "#fdb462", "phidb" = "#b3cde3",
"ea" = "#ccebc5", "hea" = "#ffed6f", "hes" = "#8dd3c7",
"fb1" = "#bebada", "fb2" = "#fb8072", "beta" = "#80b1d3",
"gamma" = "#fdb462", "delta" = "#b3cde3", "ms" = "#fccde5",
"td" = "#d9d9d9"
)
feedback_plot <- ggplot(feedback_sobol, aes(x = "", y = original, fill = parameters)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_manual(values = color_palette) +
theme_void()
no_feedback_plot <- ggplot(no_feedback_sobol, aes(x = "", y = original, fill = parameters)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_manual(values = color_palette) +
theme_void()
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/2_f') # set your working directory
ggsave("ld_deter_ma_f_S.png",
feedback_plot,
width = 10, height = 6)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/2_no_f') # set your working directory
ggsave("ld_deter_ma_nf_S.png",
no_feedback_plot,
width = 10, height = 6)
rm(list=ls())
# Requirements
package_list <- c("sensobol", "data.table", "ggplot2", "deSolve", "foreach", "parallel", "readxl", "doParallel", "rootSolve", "dplyr", "rlang", "pracma", "matrixcalc", "data.table", "nleqslv")
for (package in package_list){
if (!require(package, character.only = TRUE)) {
install.packages(package)
}
library(package, character.only = TRUE)
}
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/2_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_S.dummy.RData")
ind <- readRDS("ld_deter_ma_S.RData")
feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
feedback_dummy <- feedback_dummy[1, 1]
feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "feedback") %>%
select(original, low.ci, parameters)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/2_no_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_S.dummy.RData")
ind <- readRDS("ld_deter_ma_S.RData")
no_feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
no_feedback_dummy <- no_feedback_dummy[1, 1]
no_feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "no_feedback") %>%
select(original, low.ci, parameters)
rm(ind)
rm(ind.dummy)
feedback_sobol <- feedback_sobol %>%
filter(low.ci > feedback_dummy) %>%
mutate(original = original / sum(original)) %>%
select(original, parameters)
no_feedback_sobol <- no_feedback_sobol %>%
filter(low.ci > no_feedback_dummy) %>%
mutate(original = original / sum(original)) %>%
select(original, parameters)
# Define a color palette
color_palette <- c(
"rmax" = "#377eb8", "topt" = "#ff7f00", "tmax" = "#4daf4a",
"l" = "#f781bf", "nr" = "#a65628", "i0" = "#984ea3",
"ir" = "#999999", "hp" = "#e41a1c", "a" = "#dede00",
"mh" = "#f0027f", "alpha" = "#b3de69", "h" = "#fccde5",
"phida" = "#80b1d3", "phids" = "#fdb462", "phidb" = "#b3cde3",
"ea" = "#ccebc5", "hea" = "#ffed6f", "hes" = "#8dd3c7",
"fb1" = "#bebada", "fb2" = "#fb8072", "beta" = "#80b1d3",
"gamma" = "#fdb462", "delta" = "#b3cde3", "ms" = "#fccde5",
"td" = "#d9d9d9"
)
feedback_plot <- ggplot(feedback_sobol, aes(x = "", y = original, fill = parameters)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_manual(values = color_palette) +
theme_void()
no_feedback_plot <- ggplot(no_feedback_sobol, aes(x = "", y = original, fill = parameters)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_manual(values = color_palette) +
theme_void()
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/2_f') # set your working directory
ggsave("ld_deter_ma_f_S.png",
feedback_plot,
width = 10, height = 6)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/2_no_f') # set your working directory
ggsave("ld_deter_ma_nf_S.png",
no_feedback_plot,
width = 10, height = 6)
rm(list=ls())
# Requirements
package_list <- c("sensobol", "data.table", "ggplot2", "deSolve", "foreach", "parallel", "readxl", "doParallel", "rootSolve", "dplyr", "rlang", "pracma", "matrixcalc", "data.table", "nleqslv")
for (package in package_list){
if (!require(package, character.only = TRUE)) {
install.packages(package)
}
library(package, character.only = TRUE)
}
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/3_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_S.dummy.RData")
ind <- readRDS("ld_deter_ma_S.RData")
feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
feedback_dummy <- feedback_dummy[1, 1]
feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "feedback") %>%
select(original, low.ci, parameters)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/3_no_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_S.dummy.RData")
ind <- readRDS("ld_deter_ma_S.RData")
no_feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
no_feedback_dummy <- no_feedback_dummy[1, 1]
no_feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "no_feedback") %>%
select(original, low.ci, parameters)
rm(ind)
rm(ind.dummy)
feedback_sobol <- feedback_sobol %>%
filter(low.ci > feedback_dummy) %>%
mutate(original = original / sum(original)) %>%
select(original, parameters)
no_feedback_sobol <- no_feedback_sobol %>%
filter(low.ci > no_feedback_dummy) %>%
mutate(original = original / sum(original)) %>%
select(original, parameters)
# Define a color palette
color_palette <- c(
"rmax" = "#377eb8", "topt" = "#ff7f00", "tmax" = "#4daf4a",
"l" = "#f781bf", "nr" = "#a65628", "i0" = "#984ea3",
"ir" = "#999999", "hp" = "#e41a1c", "a" = "#dede00",
"mh" = "#f0027f", "alpha" = "#b3de69", "h" = "#fccde5",
"phida" = "#80b1d3", "phids" = "#fdb462", "phidb" = "#b3cde3",
"ea" = "#ccebc5", "hea" = "#ffed6f", "hes" = "#8dd3c7",
"fb1" = "#bebada", "fb2" = "#fb8072", "beta" = "#80b1d3",
"gamma" = "#fdb462", "delta" = "#b3cde3", "ms" = "#fccde5",
"td" = "#d9d9d9"
)
feedback_plot <- ggplot(feedback_sobol, aes(x = "", y = original, fill = parameters)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_manual(values = color_palette) +
theme_void()
no_feedback_plot <- ggplot(no_feedback_sobol, aes(x = "", y = original, fill = parameters)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_manual(values = color_palette) +
theme_void()
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/3_f') # set your working directory
ggsave("ld_deter_ma_f_S.png",
feedback_plot,
width = 10, height = 6)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/3_no_f') # set your working directory
ggsave("ld_deter_ma_nf_S.png",
no_feedback_plot,
width = 10, height = 6)
rm(list=ls())
# Requirements
package_list <- c("sensobol", "data.table", "ggplot2", "deSolve", "foreach", "parallel", "readxl", "doParallel", "rootSolve", "dplyr", "rlang", "pracma", "matrixcalc", "data.table", "nleqslv")
for (package in package_list){
if (!require(package, character.only = TRUE)) {
install.packages(package)
}
library(package, character.only = TRUE)
}
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/4_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_S.dummy.RData")
ind <- readRDS("ld_deter_ma_S.RData")
feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
feedback_dummy <- feedback_dummy[1, 1]
feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "feedback") %>%
select(original, low.ci, parameters)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/4_no_f') # set your working directory
rm(list=ls())
# Requirements
package_list <- c("sensobol", "data.table", "ggplot2", "deSolve", "foreach", "parallel", "readxl", "doParallel", "rootSolve", "dplyr", "rlang", "pracma", "matrixcalc", "data.table", "nleqslv")
for (package in package_list){
if (!require(package, character.only = TRUE)) {
install.packages(package)
}
library(package, character.only = TRUE)
}
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/4_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_S.dummy.RData")
ind <- readRDS("ld_deter_ma_S.RData")
feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
feedback_dummy <- feedback_dummy[1, 1]
feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "feedback") %>%
select(original, low.ci, parameters)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/3_no_f') # set your working directory
ind.dummy <- readRDS("ld_deter_ma_S.dummy.RData")
ind <- readRDS("ld_deter_ma_S.RData")
no_feedback_dummy <- ind.dummy %>%
filter(sensitivity == "Si") %>%
select(original)
no_feedback_dummy <- no_feedback_dummy[1, 1]
no_feedback_sobol <- ind$results %>%
filter(sensitivity == "Si") %>%
mutate(category = "no_feedback") %>%
select(original, low.ci, parameters)
rm(ind)
rm(ind.dummy)
feedback_sobol <- feedback_sobol %>%
filter(low.ci > feedback_dummy) %>%
mutate(original = original / sum(original)) %>%
select(original, parameters)
no_feedback_sobol <- no_feedback_sobol %>%
filter(low.ci > no_feedback_dummy) %>%
mutate(original = original / sum(original)) %>%
select(original, parameters)
# Define a color palette
color_palette <- c(
"rmax" = "#377eb8", "topt" = "#ff7f00", "tmax" = "#4daf4a",
"l" = "#f781bf", "nr" = "#a65628", "i0" = "#984ea3",
"ir" = "#999999", "hp" = "#e41a1c", "a" = "#dede00",
"mh" = "#f0027f", "alpha" = "#b3de69", "h" = "#fccde5",
"phida" = "#80b1d3", "phids" = "#fdb462", "phidb" = "#b3cde3",
"ea" = "#ccebc5", "hea" = "#ffed6f", "hes" = "#8dd3c7",
"fb1" = "#bebada", "fb2" = "#fb8072", "beta" = "#80b1d3",
"gamma" = "#fdb462", "delta" = "#b3cde3", "ms" = "#fccde5",
"td" = "#d9d9d9"
)
feedback_plot <- ggplot(feedback_sobol, aes(x = "", y = original, fill = parameters)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_manual(values = color_palette) +
theme_void()
no_feedback_plot <- ggplot(no_feedback_sobol, aes(x = "", y = original, fill = parameters)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_manual(values = color_palette) +
theme_void()
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/4_f') # set your working directory
ggsave("ld_deter_ma_f_S.png",
feedback_plot,
width = 10, height = 6)
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/figures/sens_all_the_way/3_no_f') # set your working directory
ggsave("ld_deter_ma_nf_S.png",
no_feedback_plot,
width = 10, height = 6)
